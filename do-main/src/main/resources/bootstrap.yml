server:
  port: ${PORT:8085}
  servlet:
    context-path: /

spring:
  application:
    name: ${application.name}
  messages:
    basename: i18n/messages
    cache-seconds: -1
    encoding: UTF-8
  aop:
    proxy-target-class: true
  mvc:
    locale: en_US
  cloud:
    discovery:
      enabled: false
    config:
      enabled: false
      discovery:
        enabled: false
  servlet:
    multipart:
      max-file-size: 50MB
      max-request-size: 60MB
  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://${DATABASE_HOST:localhost}:${DATABASE_PORT:5432}/${DATABASE_NAME:cer}
    username: ${DATABASE_USERNAME:postgres}
    password: ${DATABASE_PASSWORD:P@ssw0rd}
    platform: postgres
    type: com.zaxxer.hikari.HikariDataSource
    hikari:
      pool-name: SecurityDongkapPool
      connection-test-query: SELECT 1
      leak-detection-threshold: 30000
      connection-timeout: 30000
      idle-timeout: 120000
      max-lifetime: 720000
      maximum-pool-size: 50
      minimum-idle: 5
      data-source-properties:
        cachePrepStmts: true
        prepStmtCacheSize: 250
        prepStmtCacheSqlLimit: 2048
        useServerPrepStmts: true
        useLocalSessionState: true
        rewriteBatchedStatements: true
        cacheResultSetMetadata: true
        cacheServerConfiguration: true
        elideSetAutoCommits: true
        maintainTimeStats: false
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
#    database-platform: org.hibernate.spatial.dialect.postgis.PostgisDialect
    database: POSTGRESQL
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        current_session_context_class: org.springframework.orm.hibernate5.SpringSessionContext
        temp:
          use_jdbc_metadata_defaults: false
        show_sql: false
    show-sql: false
    hibernate:
      connection:
        provider_class: com.zaxxer.hikari.hibernate.HikariConnectionProvider
      ddl-auto: none
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
        implicit-strategy: org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl
  security:
    oauth2:
      client:
        registration:
          google:
            client-name: Google
            clientId: ${GOOGLE_OAUTH_CLIENT_ID}
            clientSecret: ${GOOGLE_OAUTH_CLIENT_SECRET}
            redirectUri: "{baseUrl}/oauth2/callback/{registrationId}"
            scope:
              - email
              - profile
          github:
            client-name: Github
            clientId: ${GITHUB_OAUTH_CLIENT_ID}
            clientSecret: ${GITHUB_OAUTH_CLIENT_SECRET}
            redirectUri: "{baseUrl}/oauth2/callback/{registrationId}"
            scope:
              - user:email
              - read:user
          facebook:
            client-name: Facebook
            clientId: ${FACEBOOK_OAUTH_CLIENT_ID}
            clientSecret: ${FACEBOOK_OAUTH_CLIENT_SECRET}
            redirectUri: "{baseUrl}/oauth2/callback/{registrationId}"
            scope:
              - email
              - public_profile
        provider:
          facebook:
            authorizationUri: https://www.facebook.com/v3.0/dialog/oauth
            tokenUri: https://graph.facebook.com/v3.0/oauth/access_token
            userInfoUri: https://graph.facebook.com/v3.0/me?fields=id,first_name,middle_name,last_name,name,email,verified,is_verified,picture.width(250).height(250)

logging:
  level:
    root: INFO
    org.hibernate.SQL: INFO
    org.hibernate.type: INFO
    com.netflix.loadbalancer.reactive.LoadBalancerCommand: INFO
    com.netflix: INFO
    org.springframework.web: INFO
    org.springframework.cloud: INFO
    org.apache: INFO
    org.apache.http: INFO
    org.apache.tomcat: INFO
    org.apache.catalina.session.ManagerBase.level: INFO
    com.mchange.v2.async.ThreadPoolAsynchronousRunner: INFO
    com.github.isrsal.logging.LoggingFilter: INFO

---
spring:
  profiles: development
  jpa:
    properties:
      hibernate:
        show_sql: true
    show-sql: true

---
spring:
  profiles: production
  jpa:
    properties:
      hibernate:
        show_sql: false
    show-sql: false
